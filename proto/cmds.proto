syntax = "proto2";

enum command_id {
    UNKNOWN = 0;
    VERSION_GET = 1;
    ADC_CHS_GET = 2;
    ADC_CH_READ = 3;
    PWM_CHS_GET = 4;
    PWM_CH_SET = 5;
    PWM_CH_GET = 6;
    PWM_PERIOD_INTERVAL_GET = 7;
}

enum ret_code {
    OK = 0;
    ERROR = 1;
    INVALID_ARGUMENT = 2;
    NOT_FOUND = 3;
    PERMISSION_DENIED = 4;
    UNAUTHENTICATED = 5;
    ALREADY_EXISTS = 6;
    UNAVAILABLE = 7;
    INTERNAL = 8;
    TIMEOUT = 9;
}

message req_hdr {
    required command_id id = 1;
}

message res_hdr {
    required command_id id = 1;
    optional ret_code ret = 2;
    optional string err_msg = 3;
}

message version_get_req {
    reserved 1;
}

message version_get_res {
    optional fixed32 version = 1;
    optional string branch = 2;
    optional string sha1 = 3;
    optional string commit_date = 4;
}

message adc_chs_get_req {
    reserved 1;
}

message adc_chs_get_res {
    optional fixed32 adc_chs = 1;
}

message adc_ch_read_req {
    required fixed32 ch = 1;
}

message adc_ch_read_res {
    optional fixed32 val = 1;
}

message pwm_chs_get_req {
    reserved 1;
}

message pwm_chs_get_res {
    optional fixed32 pwm_chs = 1;
}

message pwm_ch_set_req {
    required fixed32 ch = 1;
    required uint32 period = 2;
    required uint32 pulse = 3;
}

message pwm_ch_set_res {
    reserved 1;
}

message pwm_ch_get_req {
    required fixed32 ch = 1;
}

message pwm_ch_get_res {
    required uint32 period = 1;
    required uint32 pulse = 2;
}

message pwm_periods_get_req {
    reserved 1;
}

message pwm_periods_get_res {
    required uint32 period_min = 1;
    required uint32 period_max = 2;
}

message request {
    required req_hdr hdr = 1;
    oneof pl {
        version_get_req version_get = 2;
        adc_chs_get_req adc_chs_get = 3;
        adc_ch_read_req adc_ch_read = 4;
        pwm_chs_get_req pwm_chs_get = 5;
        pwm_ch_set_req pwm_ch_set = 6;
        pwm_ch_get_req pwm_ch_get = 7;
        pwm_periods_get_req pwm_periods_get = 8;
    }
}

message response {
    required res_hdr hdr = 1;
    oneof pl {
        version_get_res version_get = 2;
        adc_chs_get_res adc_chs_get = 3;
        adc_ch_read_res adc_ch_read = 4;
        pwm_chs_get_res pwm_chs_get = 5;
        pwm_ch_set_res pwm_ch_set = 6;
        pwm_ch_get_res pwm_ch_get = 7;
        pwm_periods_get_res pwm_periods_get = 8;
    }
}
